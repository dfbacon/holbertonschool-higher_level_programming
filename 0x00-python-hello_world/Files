Holberton School
My planning
My projects
My concepts
My batchmates
QA reviews I can make
My Captain's Logs
My Officers
My Speakers of the day
My Servers
My profile
You just released the optional tasks of this project. Have fun!
0x00. Python - Hello, World
 Higher-level programming ― Python

 by Guillaume, Full stack engineer

 Ongoing project - started 01-02-2017, must end by 01-03-2017 (in about 14 hours) - you're 0% done.

 Manual QA review must be done (request it when you are done on the project)

C vs Python

Zen

The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
Readme

Read the first three chapters of The Python tutorial: Whetting Your Appetite, Using the Python Interpreter and An Informal Introduction to Python. For this last chapter (An Informal Introduction to Python), read until 3.1.2. Strings included (you do not have to read '3.1.3 Lists').

Watch: Learn to Program.

Python's got style! PEP 8 -- Style Guide for Python Code.

TL;DR;

install it: sudo apt-get install python3-pep8
use it: pep8 file.py
... and of course, last but not least: man python3

What you should learn from this project

At the end of this project you are expected to be able to explain to anyone, without the help of Google:

Why Python programming is awesome (don’t forget to tweet today, with the hashtag #pythoniscool :))
Who created Python
Who is Guido van Rossum
Where does the name 'Python' come from
What is the Zen of Python
How to use the Python interpreter
How to print text and variables using print
How to use strings
What are indexing and slicing in Python
What is the official Holberton Python coding style and how to check your code with PEP 8
Requirements for Python scripts

Allowed editors: vi, vim, emacs
All your files will be interpreted/compiled on Ubuntu 14.04 LTS using python3 (version 3.4.3)
All your files should end with a new line
The first line of all your files should be exactly #!/usr/bin/python3
A README.md file, at the root of the folder of the project, is mandatory
Your code should use the PEP 8 style
All your files must be executable
The length of your files will be tested using wc
Requirements for Shell scripts

Allowed editors: vi, vim, emacs
All your scripts will be tested on Ubuntu 14.04 LTS
All your scripts should be exactly two lines long (wc -l file should print 2)
All your files should end with a new line
The first line of all your files should be exactly #!/bin/bash
All your files must be executable


Flyingcircus_2

Tasks
  Done?  
Help!
0. Run Python file mandatory

Write a Shell script that runs a Python script.

The Python file name will be saved in the environment variable $PYFILE

guillaume@ubuntu:~/py/0x00$ cat main.py 
#!/usr/bin/python3
print("Holberton School")

guillaume@ubuntu:~/py/0x00$ export PYFILE=main.py
guillaume@ubuntu:~/py/0x00$ ./0-run
Holberton School
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 0-run
  Done?  
Help!
1. Run inline mandatory

Write a Shell script that runs Python code.

The Python code will be saved in the environment variable $PYCODE

guillaume@ubuntu:~/py/0x00$ export PYCODE='print("Holberton School: {}".format(88+10))'
guillaume@ubuntu:~/py/0x00$ ./1-run_inline 
Holberton School: 98
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 1-run_inline
  Done?  
Help!
2. Hello, print mandatory

Write a Python script that prints exactly "Programming is like building a multilingual puzzle, followed by a new line.

Use the function print
guillaume@ubuntu:~/py/0x00$ ./2-print.py 
"Programming is like building a multilingual puzzle
guillaume@ubuntu:~/py/0x00$
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 2-print.py
  Done?  
Help!
3. Print integer mandatory

Complete this source code in order to print the integer stored in the variable number, followed by Battery street, followed by a new line.

You can find the source code here
The output of the script should be:
the number, followed by Battery street,
followed by a new line
You are not allowed to cast the variable number into a string
Your code must be 3 lines long
guillaume@ubuntu:~/py/0x00$ ./3-print_number.py
98 Battery street
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 3-print_number.py
  Done?  
Help!
4. Print float mandatory

Complete the source code in order to print the float stored in the variable number with a precision of 2 digits.

You can find the source code here
The output of the program should be:
Float:, followed by the float with only 2 digits
followed by a new line
You are not allowed to cast number to string
You have to use the new print formatting tips
guillaume@ubuntu:~/py/0x00$ ./4-print_float.py
Float: 3.14
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 4-print_float.py
  Done?  
Help!
5. Print string mandatory

Complete this source code in order to print 3 times a string stored in the variable str, followed by its first 9 characters.

You can find the source code here
The output of the program should be:
3 times the value of str
followed by a new line
followed by the 9 first characters of str
followed by a new line
You are not allowed to use any loops or conditional statement
Your program should be maximum 5 lines long
guillaume@ubuntu:~/py/0x00$ ./5-print_string.py 
Holberton SchoolHolberton SchoolHolberton School
Holberton
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 5-print_string.py
  Done?  
Help!
6. Play with strings mandatory

Complete this source code to print Welcome to Holberton School!

You can find the source code here
You are not allowed to use any loops or conditional statements.
You have to use the variables str1 and str2 in your new line of code
Your program should be exactly 5 lines long
guillaume@ubuntu:~/py/0x00$ ./6-concat.py
Welcome to Holberton School!
guillaume@ubuntu:~/py/0x00$ wc -l 6-concat.py
5 6-concat.py
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 6-concat.py
  Done?  
Help!
7. Copy - Cut - Paste mandatory

Complete this source code

You can find the source code here
You are not allowed to use any loops or conditional statements
Your program should be exactly 8 lines long
word_first_3 should contain the first 3 letters of the variable word
word_last_2 should contain the last 2 letters of the variable word
middle_word should contain the value of the variable word without the first and last letters
guillaume@ubuntu:~/py/0x00$ ./7-edges.py
First 3 letters: Hol
Last 2 letters: on
Middle word: olberto
guillaume@ubuntu:~/py/0x00$ wc -l 7-edges.py
8 7-edges.py
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 7-edges.py
  Done?  
Help!
8. Create a new sentence mandatory

Complete this source code to print object-oriented programming with Python, followed by a new line.

You can find the source code here
You are not allowed to use any loops or conditional statements
Your program should be exactly 4 lines long
You are not allowed to create new variables
You are not allowed to use string literals
guillaume@ubuntu:~/py/0x00$ ./8-concat_edges.py
object-oriented programming with Python
guillaume@ubuntu:~/py/0x00$ wc -l 8-concat_edges.py
4 8-concat_edges.py
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 8-concat_edges.py
  Done?  
Help!
9. Easter Egg mandatory

Write a Python script that prints "The Zen of Python", by TimPeters, followed by a new line.

Your script should be maximum 98 characters long (please check with wc -m 9-easter_egg.py)
guillaume@ubuntu:~/py/0x00$ ./9-easter_egg.py
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
guillaume@ubuntu:~/py/0x00$
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 9-easter_egg.py
  Done?  
Help!
10. Hello, write #advanced

Write a Python script that prints exactly and that piece of art is useful - Dora Korpar, 2015-10-19, followed by a new line.

Use the function write from the sys module
You are not allowed to use print
You script should print to stderr
Your script should exit with the status code 1
guillaume@ubuntu:~/py/0x00$ ./100-write.py
and that piece of art is useful - Dora Korpar, 2015-10-19
guillaume@ubuntu:~/py/0x00$ echo $?
1
guillaume@ubuntu:~/py/0x00$ ./100-write.py 2> q
guillaume@ubuntu:~/py/0x00$ cat q
and that piece of art is useful - Dora Korpar, 2015-10-19
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 100-write.py
  Done?  
Help!
11. Compile #advanced

Write a script that compiles a Python script file.

The Python file name will be stored in the environment variable $PYFILE

guillaume@ubuntu:~/py/0x00$ cat main.py 
#!/usr/bin/python3
print("Holberton School")

guillaume@ubuntu:~/py/0x00$ export PYFILE=main.py
guillaume@ubuntu:~/py/0x00$ ./101-compile
Compiling main.py ...
guillaume@ubuntu:~/py/0x00$ ls
101-compile  main.py  main.pyc
guillaume@ubuntu:~/py/0x00$ od -t x1 main.pyc | tail -n +2
0000020 00 01 00 00 00 40 00 00 00 73 09 00 00 00 64 00
0000040 00 47 48 64 01 00 53 28 02 00 00 00 73 10 00 00
0000060 00 48 6f 6c 62 65 72 74 6f 6e 20 53 63 68 6f 6f
0000100 6c 4e 28 00 00 00 00 28 00 00 00 00 28 00 00 00
0000120 00 28 00 00 00 00 73 07 00 00 00 6d 61 69 6e 2e
0000140 70 79 74 08 00 00 00 3c 6d 6f 64 75 6c 65 3e 02
0000160 00 00 00 73 00 00 00 00
0000170
guillaume@ubuntu:~/py/0x00$ 
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 101-compile
  Done?  
Help!
12. ByteCode -> Python #1 #advanced

Write the Python function def magic_calculation(a, b): that does exactly the same as the following Python bytecode:

  3           0 LOAD_CONST               1 (98)
              3 LOAD_FAST                0 (a)
              6 LOAD_FAST                1 (b)
              9 BINARY_POWER
             10 BINARY_ADD
             11 RETURN_VALUE
Tip: Python bytecode
Repo:

GitHub repository: holbertonschool-higher_level_programming
Directory: 0x00-python-hello_world
File: 102-magic_calculation.py
